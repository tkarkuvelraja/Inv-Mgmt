
PROCEDURE invoke_bpm_workflow(
    p_url         IN VARCHAR2,
    p_parameter   IN VARCHAR2 DEFAULT NULL,
    p_call_method IN VARCHAR2, -- Get or Post
    x_instance_id OUT nocopy fxls_bpm_events.flow_instance_id%TYPE,
    x_status OUT nocopy fxls_bpm_events.proc_action%TYPE,
    x_message OUT nocopy fxls_bpm_events.comments%TYPE,
    x_instance_performer OUT nocopy fxls_bpm_events.performer%TYPE,
    x_completed OUT nocopy fxls_bpm_events.completed%TYPE,
    x_action OUT nocopy fxls_bpm_events.proc_action%TYPE,
    x_flow_response OUT nocopy CLOB,
    x_return_status OUT nocopy  VARCHAR2,
    x_return_message OUT nocopy VARCHAR2 )
AS
  l_process_message VARCHAR2(4000);
  ex_error          EXCEPTION;
BEGIN
  l_process_message := '[IBWFPM] BPM workflow is invoked';
  fxgn_debug_pkg.ADD(l_process_message);
  -- Set HTTP Request Headers
  apex_web_service.g_request_headers(1).NAME  := q'#User-Agent#';
  apex_web_service.g_request_headers(1).VALUE := q'#Oracle Application Express / REST Client Assistant#';
  apex_web_service.g_request_headers(2).NAME  := 'Content-Type';
  apex_web_service.g_request_headers(2).VALUE := 'application/json';
  l_process_message                           := '[IBWFPM] Method: ['||p_call_method||'] | URL: ['||p_url||']';
  fxgn_debug_pkg.ADD(l_process_message);
  -- load REST response into a collection
  IF p_call_method    = 'POST' THEN
    x_flow_response  := apex_web_service.make_rest_request( p_url => p_url , p_http_method => p_call_method, p_body => p_parameter);
  elsif p_call_method = 'GET' THEN
    x_flow_response  := apex_web_service.make_rest_request( p_url => p_url , p_http_method => p_call_method);
  END IF;
  apex_json.parse(x_flow_response);
  fxgn_debug_pkg.add_clob('[IBWFPM] Response: '||x_flow_response);
  BEGIN
    SELECT processinstanceid,
      completed,
      status,
      MESSAGE,
      assignedtogroup,
      taskname
    INTO x_instance_id,
      x_completed,
      x_status,
      x_message,
      x_instance_performer,
      x_action
    FROM dual,
      json_table (x_flow_response, '$[*]' COLUMNS (processinstanceid VARCHAR2(100) path '$.processInstanceId', completed VARCHAR2(100) path '$.completed', status VARCHAR2(100) path '$.status', MESSAGE VARCHAR2(100) path '$.message', NESTED path '$.tasks[*]' COLUMNS (taskid VARCHAR2(100) path '$.taskId', taskname VARCHAR2(100) path '$.taskName', assignedtogroup VARCHAR2(100) path '$.assignedToGroup')));
    --    dbms_output.put_line ('Response: '||x_response);
    --    dbms_output.put_line ('Flow Instance Id: '||x_flow_instance_id);
    --    dbms_output.put_line ('Status: '||x_status);
    --    dbms_output.put_line ('Message: '||x_message);
    --    dbms_output.put_line ('Instance Performer: '||x_instance_performer);
    --    dbms_output.put_line ('Action: '||x_action);
    --    dbms_output.put_line ('Action: '||x_completed);
  EXCEPTION
  WHEN OTHERS THEN
    x_return_status := 'E';
    x_instance_id   := -1;
    --  x_status := -1;
    x_message            := -1;
    x_instance_performer := -1;
    x_action             := -1;
    x_completed          := -1;
    x_return_message     := 'Error while deriving bpm json response '||sqlerrm;
    raise ex_error;
  END;
  IF NVL(x_status,'E') != 'S' THEN
    x_return_status    := 'E';
    x_return_message   := '[IBWFEM] Error response ['||x_flow_response||']';
    raise ex_error;
  END IF;
  l_process_message := '[IBWFPM] BPM response...[Flow Instance Id: '||x_instance_id|| ' | Status: '||x_status||' | Message: '||x_message|| ' | Instance Perfoermer: '||x_instance_performer||' | Process Action: '||x_action|| ' | Completed: '||x_completed||']';
  fxgn_debug_pkg.ADD(l_process_message);
EXCEPTION
WHEN ex_error THEN
  ROLLBACK;
  x_return_status  := 'E';
  x_return_message := '[X]'||x_return_message;
  fxgn_debug_pkg.ADD(x_return_message);
WHEN OTHERS THEN
  ROLLBACK;
  x_return_status  := 'E';
  x_return_message :='Error - '||SUBSTR(1,100,sqlerrm);
  fxgn_debug_pkg.ADD(x_return_message);
END invoke_bpm_workflow;
